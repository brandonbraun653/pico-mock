/*
 * This file has been auto-generated by CppUMockGen v0.6.
 *
 * Contents will NOT be preserved if it is regenerated!!!
 */

extern "C" {
#include "../include/pico/platform.h"
}

#include <CppUTestExt/MockSupport.h>

void panic_unsupported()
{
    mock().actualCall("panic_unsupported");
}

void panic(const char * fmt)
{
    mock().actualCall("panic").withStringParameter("fmt", fmt);
}

_Bool running_on_fpga()
{
    return mock().actualCall("running_on_fpga").returnBoolValue();
}

uint8_t rp2040_chip_version()
{
    return static_cast<uint8_t>(mock().actualCall("rp2040_chip_version").returnUnsignedIntValue());
}

void busy_wait_at_least_cycles(uint32_t minimum_cycles)
{
    mock().actualCall("busy_wait_at_least_cycles").withUnsignedIntParameter("minimum_cycles", minimum_cycles);
}

uint get_core_num()
{
    return static_cast<uint>(mock().actualCall("get_core_num").returnUnsignedIntValue());
}

uint8_t rp2040_rom_version()
{
    return static_cast<uint8_t>(mock().actualCall("rp2040_rom_version").returnUnsignedIntValue());
}

void tight_loop_contents()
{
    mock().actualCall("tight_loop_contents");
}

